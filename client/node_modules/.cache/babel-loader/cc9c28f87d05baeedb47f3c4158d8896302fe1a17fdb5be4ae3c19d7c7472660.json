{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\xfilter\\\\X_filter\\\\client\\\\src\\\\components\\\\Input\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  setMessage,\n  sendMessage,\n  message,\n  uploadFile\n}) => {\n  _s();\n  const [fileInput, setFileInput] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      // Pass the selected file to the parent component\n      uploadFile(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Type a message ...\",\n      value: message,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setMessage(value),\n      onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileChange,\n      ref: input => setFileInput(input) // Use ref to reference the file input element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sendButton\",\n      onClick: event => sendMessage(event),\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadButton\",\n      onClick: () => fileInput.click() // When the button is clicked, trigger the file input click event\n      ,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"G5xPX42YnRcdNk/puxktLa8qyWg=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Input","setMessage","sendMessage","message","uploadFile","_s","fileInput","setFileInput","handleFileChange","event","file","target","files","className","children","type","placeholder","value","onChange","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","style","display","ref","input","onClick","click","_c","$RefreshReg$"],"sources":["C:/Users/user/xfilter/X_filter/client/src/components/Input/Input.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = ({ setMessage, sendMessage, message, uploadFile }) => {\r\n  const [fileInput, setFileInput] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Pass the selected file to the parent component\r\n      uploadFile(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Type a message ...\"\r\n        value={message}\r\n        onChange={({ target: { value } }) => setMessage(value)}\r\n        onKeyPress={(event) => (event.key === 'Enter' ? sendMessage(event) : null)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleFileChange}\r\n        ref={(input) => setFileInput(input)} // Use ref to reference the file input element\r\n      />\r\n      <button className=\"sendButton\" onClick={(event) => sendMessage(event)}>\r\n        Enter\r\n      </button>\r\n      <button\r\n        className=\"uploadButton\"\r\n        onClick={() => fileInput.click()} // When the button is clicked, trigger the file input click event\r\n      >\r\n        Upload File\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR;MACAN,UAAU,CAACM,IAAI,CAAC;IAClB;EACF,CAAC;EAED,oBACEX,OAAA;IAAMc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpBf,OAAA;MACEc,SAAS,EAAC,OAAO;MACjBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEd,OAAQ;MACfe,QAAQ,EAAEA,CAAC;QAAEP,MAAM,EAAE;UAAEM;QAAM;MAAE,CAAC,KAAKhB,UAAU,CAACgB,KAAK,CAAE;MACvDE,UAAU,EAAGV,KAAK,IAAMA,KAAK,CAACW,GAAG,KAAK,OAAO,GAAGlB,WAAW,CAACO,KAAK,CAAC,GAAG;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eACFzB,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXU,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BR,QAAQ,EAAEV,gBAAiB;MAC3BmB,GAAG,EAAGC,KAAK,IAAKrB,YAAY,CAACqB,KAAK,CAAE,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFzB,OAAA;MAAQc,SAAS,EAAC,YAAY;MAACgB,OAAO,EAAGpB,KAAK,IAAKP,WAAW,CAACO,KAAK,CAAE;MAAAK,QAAA,EAAC;IAEvE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MACEc,SAAS,EAAC,cAAc;MACxBgB,OAAO,EAAEA,CAAA,KAAMvB,SAAS,CAACwB,KAAK,CAAC,CAAE,CAAC;MAAA;MAAAhB,QAAA,EACnC;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACnB,EAAA,CAtCIL,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}