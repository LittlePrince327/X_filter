{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\xfilter\\\\X_filter\\\\client\\\\src\\\\components\\\\ResetPassword\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showPasswordFields, setShowPasswordFields] = useState(false); // 비밀번호 입력 필드 표시 여부 상태 추가\n\n  const handleResetPassword = () => {\n    if (email && username) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        setErrorMessage('올바른 이메일 주소를 입력해주세요.');\n        return;\n      }\n      Axios.post('http://localhost:8000/idpassword/resetpassword', {\n        email: email,\n        username: username\n      }).then(response => {\n        setShowPasswordFields(true);\n        console.log(response.data);\n      }).catch(error => {\n        console.error('비밀번호 재설정 실패:', error);\n        setErrorMessage('비밀번호 재설정에 실패했습니다.');\n      });\n    } else {\n      setErrorMessage('아이디, 이메일을 입력해주세요.');\n    }\n  };\n  const handleGoToPasswordReset = () => {\n    // 사용자 정보 조회에 성공한 후 비밀번호 재설정 페이지로 이동\n    window.location.href = 'http://localhost:8000/idpassword/password_reset/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        type: \"text\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        type: \"email\",\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4 \\uC870\\uD68C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this), showPasswordFields && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoToPasswordReset,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815 \\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"N8nEH/NXKRMOehyjGKh/jFopBe4=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Axios","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","username","setUsername","errorMessage","setErrorMessage","showPasswordFields","setShowPasswordFields","handleResetPassword","emailRegex","test","post","then","response","console","log","data","catch","error","handleGoToPasswordReset","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/xfilter/X_filter/client/src/components/ResetPassword/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport './ResetPassword.css';\r\n\r\nfunction ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [showPasswordFields, setShowPasswordFields] = useState(false); // 비밀번호 입력 필드 표시 여부 상태 추가\r\n\r\n  const handleResetPassword = () => {\r\n    if (email && username) {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) {\r\n        setErrorMessage('올바른 이메일 주소를 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      Axios.post('http://localhost:8000/idpassword/resetpassword', {\r\n        email: email,\r\n        username: username,\r\n      })\r\n        .then((response) => {\r\n          setShowPasswordFields(true);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('비밀번호 재설정 실패:', error);\r\n          setErrorMessage('비밀번호 재설정에 실패했습니다.');\r\n        });\r\n    } else {\r\n      setErrorMessage('아이디, 이메일을 입력해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleGoToPasswordReset = () => {\r\n    // 사용자 정보 조회에 성공한 후 비밀번호 재설정 페이지로 이동\r\n    window.location.href = 'http://localhost:8000/idpassword/password_reset/';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>비밀번호 재설정</h2>\r\n      <div>\r\n        <input\r\n          placeholder='아이디'\r\n          type='text'\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          placeholder='이메일'\r\n          type='email'\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        />\r\n        <button onClick={handleResetPassword}>사용자 정보 조회하기</button>\r\n      </div>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n      {showPasswordFields && (\r\n        <button onClick={handleGoToPasswordReset}>비밀번호 재설정 페이지로 이동</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErE,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIR,KAAK,IAAIE,QAAQ,EAAE;MACrB,MAAMO,UAAU,GAAG,4BAA4B;MAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACV,KAAK,CAAC,EAAE;QAC3BK,eAAe,CAAC,qBAAqB,CAAC;QACtC;MACF;MAEAV,KAAK,CAACgB,IAAI,CAAC,gDAAgD,EAAE;QAC3DX,KAAK,EAAEA,KAAK;QACZE,QAAQ,EAAEA;MACZ,CAAC,CAAC,CACCU,IAAI,CAAEC,QAAQ,IAAK;QAClBN,qBAAqB,CAAC,IAAI,CAAC;QAC3BO,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCb,eAAe,CAAC,mBAAmB,CAAC;MACtC,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,eAAe,CAAC,mBAAmB,CAAC;IACtC;EACF,CAAC;EAED,MAAMc,uBAAuB,GAAGA,CAAA,KAAM;IACpC;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,kDAAkD;EAC3E,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QACE+B,WAAW,EAAC,oBAAK;QACjBC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAGC,KAAK,IAAK5B,WAAW,CAAC4B,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACF9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN9B,OAAA;QACE+B,WAAW,EAAC,oBAAK;QACjBC,IAAI,EAAC,OAAO;QACZC,QAAQ,EAAGC,KAAK,IAAK9B,QAAQ,CAAC8B,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACF9B,OAAA;QAAQqC,OAAO,EAAE1B,mBAAoB;QAAAe,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EACLvB,YAAY,iBAAIP,OAAA;MAAA0B,QAAA,EAAInB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrCrB,kBAAkB,iBACjBT,OAAA;MAAQqC,OAAO,EAAEf,uBAAwB;MAAAI,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CA3DQD,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AA6DtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}